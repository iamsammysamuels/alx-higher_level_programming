_____________________________________
"A test for the 7-base_geometry.txt"
=====================================
_____________________________________________________________________________________
"Testing the integer_validator() function that is located in the BaseGeometry class"
=====================================================================================


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

"check for module documentation"
>>> m = __import__("7-base_geometry").__doc__
>>> len(m) > 1
True

"check for class documentation"
>>> c = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(c) > 1
True

"checking for the method documentation"
>>> me = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(me) > 1
True

"check no arguments"
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

"checking for one argument"
>>> bg = BaseGeometry()
>>> bg.integer_validator("caleb")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

"checking for string and string"
>>> bg = BaseGeometry()
>>> bg.integer_validator("caleb", "Samuel")
Traceback (most recent call last):
...
TypeError: caleb must be an integer

"checking for string and booleans"
>>> bg = BaseGeometry()
>>> bg.integer_validator("crack", False)
Traceback (most recent call last):
...
TypeError: crack must be an integer

"checking for str and list"
>>> bg = BaseGeometry()
>>> bg.integer_validator("crack", [9, 5, 8])
Traceback (most recent call last):
...
TypeError: crack must be an integer

"checking for string and floats"
>>> bg = BaseGeometry()
>>> bg.integer_validator("crack", 9.4)
Traceback (most recent call last):
...
TypeError: crack must be an integer

"checking for string and 0"
>>> bg = BaseGeometry()
>>> bg.integer_validator("crack", 0)
Traceback (most recent call last):
...
ValueError: crack must be greater than 0

"checking for string and negative number"
>>> bg = BaseGeometry()
>>> bg.integer_validator("crack", -3)
Traceback (most recent call last):
...
ValueError: crack must be greater than 0
